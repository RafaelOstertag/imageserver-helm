# @formatter:off
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "imageserver.fullname" . }}
  labels:
    {{- include "imageserver.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "imageserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "imageserver.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "imageserver.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: http
            initialDelaySeconds: 20
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: http
          env:
            - name: IMAGES_DIRECTORY
              value: "/data"
            - name: QUARKUS_LOG_HANDLER_GELF_ENABLED
              value: "true"
            - name: QUARKUS_LOG_HANDLER_GELF_HOST
              value: "udp:192.168.100.3"
            - name: QUARKUS_LOG_HANDLER_GELF_PORT
              value: "12201"
            - name: K8S_PODNAME
              value: "imageserver"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data
              name: pv-0
      volumes:
      - name: pv-0
        persistentVolumeClaim:
          claimName: nfs-0
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
